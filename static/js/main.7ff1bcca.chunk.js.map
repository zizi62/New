{"version":3,"sources":["components/NavBar/Friends/Friends.module.css","components/DialogPage/DialogPage.module.css","asses/img/preloader.svg","components/common/preloader/preloader.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Profile.module.css","api/api.js","components/NavBar/NavBar.module.css","components/Header/Header.js","Redux/Redusers/auth-reducer.js","components/Header/HeaderContaner.js","components/NavBar/Friends/Friend/Friend.js","components/NavBar/Friends/Friends.js","components/NavBar/Friends/FriendsContaner.js","components/NavBar/NavBar.js","Redux/Redusers/DialogReducer.js","components/DialogPage/Messages/Message/Message.js","utils/validators.js","components/common/FormControls/FormControls.js","components/DialogPage/Messages/Messages.js","components/DialogPage/Messages/MessagesContaner.js","components/DialogPage/DialogPage.js","utils/obgect-maker.js","Redux/Redusers/UsersReducer.js","components/common/preloader/preloader.js","Redux/users-selectors/users-selectors.js","components/Users/UsersContainer.js","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.js","Redux/Redusers/ProfileReducer.js","components/Profile/MyPost/Post/Post.js","components/Profile/MyPost/MyPost.js","components/Profile/MyPostContainer.js","components/Profile/Profile.js","components/Profile/ProfileContainer.js","components/Login/Login.js","Redux/Redusers/app-reducer.js","App.js","serviceWorker.js","Redux/Redusers/SidebarReducer.js","Redux/redux-store.js","index.js","components/common/FormControls/FormControls.module.css","components/DialogPage/Messages/Messages.module.css","components/Profile/MyPost/Post/Post.module.css","components/NavBar/Friends/Friend/Friend.module.css","components/Profile/MyPost/MyPost.module.css"],"names":["module","exports","friends","dialogpage","__webpack_require__","p","preloader","img","profile","d","__webpack_exports__","usersAPI","profileAPI","authAPI","axios__WEBPACK_IMPORTED_MODULE_0__","instance","axios","withCredentials","baseURL","headers","API-KEY","getUsers","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","unFollow","userId","delete","follow","post","getProfile","getUserStatus","updateUserStatus","status","put","getMe","login","email","password","rememberMe","logOut","navbar","item","active","Header","props","react_default","a","createElement","className","src","alt","isAuth","onClick","react_router_dom","to","initialState","id","isFetching","setUserData","type","payload","getAuthUserData","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","_response$data$data","_login","wrap","_context","prev","next","sent","resultCode","stop","_x","apply","this","authReducer","state","action","objectSpread","HeaderContaner","components_Header_Header","React","Component","connect","profileData","authData","_ref3","_callee3","_context3","_x3","Friend","style","friend","ava","name","Friends","friendPage","person","map","Friends_Friend_Friend","assign","key","FriendsContainer","NavBar","activeClassName","FriendsContaner","dialogList","messages","text","dialogReducer","newMessage","newMessageText","toConsumableArray","Message","message","required","value","maxLengthCreator","maxNum","Textarea","input","meta","objectWithoutProperties","hasError","touched","error","s","formControl","Input","_ref2","maxLength10","DialogMessageForm","onSubmit","handleSubmit","Field","component","cols","rows","validate","reduxForm","form","Messages","Fragment","namesList","dialogPage","dialogName","Messages_Message_Message","Messages_DialogMessageForm","addMessage","textarea","MessagesContainer","DialogPage","MessagesContaner","store","updateObjectInArray","items","itemId","objPropName","newObjProps","u","users","totalUsersCount","followingInProgress","followAC","unFollowAC","setCurrentPageAC","setTotalUsersCountAC","totalCount","toggleIsFetchingAC","toggleIsFollowingAC","followUnfollowFlow","_callee2","method","actionCreator","_context2","_x2","_x4","_x5","userReducer","followed","filter","Preloader","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","Users","lazy","e","bind","UsersContaner","onPageChanged","pageNumber","_this","getUsersThunkCreater","preloader_preloader","react","fallback","setCurrentPage","setTotalUsersCount","toggleIsFetching","toggleIsFollowing","unfollowThunkCreater","_ref4","_callee4","_context4","_x7","followThunkCreater","_x6","ProfileStatus","_useState","useState","_useState2","slicedToArray","editMode","changeEditMode","_useState3","_useState4","statusText","changeStatusText","onDoubleClick","autoFocus","onBlur","updateStatus","onChange","currentTarget","ProfileInfo","isMode","photos","large","ProfileInfo_ProfileStatus","fullName","aboutMe","lookingForAJob","postData","like","setUserProfileAC","setUserStatus","profileReducer","newPost","newPostText","Post","postBox","maxLength20","ProfilePostForm","button","MyPost","console","log","postText","addPosts","_this2","setTimeout","setState","nextProps","nextState","myPost","MyPost_ProfilePostForm","MyPost_Post_Post","MyPostContainer","profilePage","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","Profile_MyPostContainer","ProfileContainer","match","params","authorizedUserId","history","push","getUserProfile","getStatus","components_Profile_Profile","compose","setUserProfile","withRouter","LoginReduxForm","formSummuryError","placeholder","stopSubmit","_error","react_router","formData","initialized","appReducer","App","initializeApp","Header_HeaderContaner","components_NavBar_NavBar","path","render","Profile_ProfileContainer","components_DialogPage_DialogPage","UsersContainer","components_Login_Login","app","promise","Promise","all","Boolean","window","location","hostname","sidebarReducer","reducers","combineReducers","formReducer","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ff1bcca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__2hvcR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogpage\":\"DialogPage_dialogpage__GsgBh\"};","module.exports = __webpack_public_path__ + \"static/media/preloader.a3469f27.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__afG9Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ProfileInfo_img__1N-ar\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__1bLrh\"};","import *as axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`,\r\n    headers:{'API-KEY':'31adcd6f-52a3-40ed-b242-1a4947353a54'}\r\n})\r\n\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10){\r\n       return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n       .then(response => response.data)\r\n    \r\n    },\r\n\r\n    unFollow(userId){\r\n        return instance.delete(`follow/${userId}`)\r\n       \r\n    },\r\n    follow(userId){\r\n        return instance.post(`follow/${userId}`)\r\n    \r\n    },\r\n    getProfile(userId){\r\n        return  instance.get(`profile/${userId}`)\r\n    }\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId){\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getUserStatus(userId){\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateUserStatus(status){\r\n        return instance.put(`profile/status`,{status:status})\r\n    }\r\n}\r\n\r\nexport const authAPI = {\r\n    getMe(){\r\n       return instance.get(`auth/me`)\r\n    },\r\n    login(email,password, rememberMe=false){\r\n        return instance.post(`auth/login`,{email, password, rememberMe})\r\n    },\r\n    logOut(){\r\n        return instance.delete(`auth/login`)\r\n    }\r\n\r\n    \r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbar\":\"NavBar_navbar__3YK-k\",\"item\":\"NavBar_item__eogWT\",\"active\":\"NavBar_active__1K8bZ\"};","import React from 'react'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nconst Header = (props) =>{\r\n    return (\r\n        <div className=\"header\">\r\n            <img className=\"img\" src=\"https://pngicon.ru/file/uploads/babochka-768x537.png\" alt=\"\"/>\r\n            <div className=\"loginBlock\">\r\n                {props.isAuth\r\n                    ?<div>{props.login} -  <button onClick = {props.logOut}>Log out</button></div>\r\n                    : <NavLink to={'/login'}>LOGIN</NavLink>}\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Header;","import { authAPI } from '../../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\nconst SET_USER_DATA = 'SET-USER-DATA'\r\n\r\nlet initialState = {\r\n    id: null,\r\n    login: null,\r\n    email: null,\r\n    isFetching: true,\r\n    isAuth: false\r\n\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const setUserData = (id, login, email, isAuth) => ({ type: SET_USER_DATA, payload: { id, login, email, isAuth } })\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.getMe()\r\n    if (response.data.resultCode === 0) {\r\n        let { id, login, email } = response.data.data;\r\n        dispatch(setUserData(id, login, email, true))\r\n    }\r\n\r\n\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async(dispatch) => {\r\n\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(getAuthUserData())\r\n        }\r\n        else {\r\n            let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error'\r\n            dispatch(stopSubmit('login', { _error: message }));\r\n        }\r\n\r\n    \r\n\r\n}\r\n\r\nexport const logOut = () => async (dispatch) => {\r\n    let response = await authAPI.logOut()\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUserData(null, null, null, false))\r\n        }\r\n    \r\n\r\n}\r\n\r\n\r\nexport default authReducer;","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport { logOut} from '../../Redux/Redusers/auth-reducer'\r\n\r\n\r\n\r\n\r\n\r\nclass HeaderContaner extends React.Component {\r\n  \r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        logOut:()=>dispatch(logOut())\r\n    }\r\n} \r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profileData: state.authData,\r\n        isAuth: state.authData.isAuth,\r\n        login: state.authData.login\r\n\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HeaderContaner);","import React from 'react';\r\nimport style from './Friend.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Friend = (props)=> {\r\n    return (\r\n        <div className = {style.friend}>\r\n            <img className = {style.ava}src={props.ava} alt=\"\"/>\r\n            <p className = {style.name}>{props.name}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nFriend.propTypes = {\r\n    ava: PropTypes.string,\r\n    name:PropTypes.string\r\n\r\n  };\r\n\r\nexport default Friend","import React from 'react';\r\nimport style from './Friends.module.css'\r\nimport Friend from './Friend/Friend';\r\n\r\n\r\nconst Friends = (props) => {\r\n    return (\r\n        <div><h2>Friends</h2>\r\n            <div className={style.friends}>\r\n                {props.friendPage.person.map(friend => <Friend key={friend.id} {...friend} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends","\r\nimport Friends from './Friends';\r\nimport {connect} from 'react-redux'\r\n\r\n\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return {friendPage:state.friendPage}\r\n}\r\n\r\nlet mapDispatchToProps=()=>{\r\n\r\n}\r\n\r\nconst FriendsContainer = connect(mapStateToProps,mapDispatchToProps)(Friends)\r\n\r\nexport default FriendsContainer","import React from 'react'\r\nimport style from './NavBar.module.css'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nimport FriendsContainer from './Friends/FriendsContaner';\r\n\r\n\r\nconst NavBar = (props)=>{\r\n    return (\r\n            <nav className={style.navbar}>\r\n                <ul>\r\n                    <li><NavLink  className={style.item} activeClassName = {style.active} to ='/profile'>Profile</NavLink></li>\r\n                    <li><NavLink  className={style.item} activeClassName = {style.active}  to ='/dialogs'>Messages</NavLink></li>\r\n                    <li><NavLink  className={style.item} activeClassName = {style.active}  to ='/Music'>Music</NavLink></li>\r\n                    <li> <NavLink className={style.item} activeClassName = {style.active} to ='/news'>News</NavLink></li>\r\n                    <li> <NavLink className={style.item} activeClassName = {style.active} to ='/users'>Users</NavLink></li>\r\n                </ul>\r\n               <FriendsContainer/>\r\n            </nav>\r\n    )\r\n}\r\n\r\n\r\nexport default NavBar;","const ADD_MESSAGE = 'ADD-MESSAGE'\r\n\r\n\r\nlet initialState ={\r\n    dialogList: [{ name: 'Ivan', id: 1 }, { name: 'Bob', id: 2 }, { name: 'Ann', id: 3 }, { name: 'Maks', id: 4 }],\r\n            messages: [{ text: 'Hi', id: 1 },\r\n            { text: 'Hi!!!', id: 1 },\r\n            { text: 'Hello', id: 1 },\r\n            { text: 'Im here', id: 1 },\r\n            { text: 'Thanks', id: 1 },\r\n            { text: 'Ho no', id: 1 }],\r\n           \r\n}\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE: {\r\n    \r\n            let newMessage = { text: action.newMessageText, id: 3 }\r\n            return{\r\n                ...state,\r\n                messages:[...state.messages, newMessage ],\r\n            }  \r\n        }\r\n            \r\n    \r\n            \r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const addMessageActionCreator = (text) => ({ type: ADD_MESSAGE, newMessageText: text})\r\n\r\n\r\nexport default dialogReducer;","import React from 'react'\r\nimport style from './Message.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Message = (props)=>{\r\n    return (\r\n        <div className={style.message}>\r\n            <p>{props.text}</p>\r\n        </div>\r\n          \r\n    )\r\n}\r\nMessage.propTypes = {\r\n    text:PropTypes.string\r\n\r\n  };\r\n\r\nexport default Message;","export const required= value => {\r\n\r\n    if(value) return undefined;\r\n    return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator =(maxNum)=> value => {\r\n    if(value&&value.length > maxNum) return `Max length is ${maxNum} simbols`;\r\n    return undefined\r\n}","import React from 'react';\r\nimport s from './FormControls.module.css'\r\nexport const Textarea = ({ input, meta, ...props }) => {//в пропс передается пропс, и исключается input, meta,\r\n\r\n    const hasError = meta.touched&&meta.error\r\n    return (\r\n        <div className= {s.formControl + \" \"+ (hasError?s.error:'')}>\r\n            <textarea {...input} {...props} />\r\n            {hasError&&<span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Input = ({ input, meta, ...props }) => {//в пропс передается пропс, и исключается input, meta,\r\n\r\n    const hasError = meta.touched&&meta.error\r\n    return (\r\n        <div className= {s.formControl + \" \"+ (hasError?s.error:'')}>\r\n            <input {...input} {...props} />\r\n            {hasError&&<span>{meta.error}</span>}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport style from './Messages.module.css'\r\nimport Message from './Message/Message';\r\nimport { NavLink } from 'react-router-dom'\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport {required, maxLengthCreator} from '../../../utils/validators';\r\nimport { Textarea } from '../../common/FormControls/FormControls';\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nlet DialogMessageForm = (props) => {\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field name='textarea' component={Textarea} cols=\"30\" rows=\"3\"  validate ={[required, maxLength10]}/>\r\n            <button>Add</button>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nDialogMessageForm = reduxForm({ form: 'dialogMessage' })(DialogMessageForm)\r\n\r\nconst Messages = (props) => {\r\n\r\n    let onSubmit = (value) => {\r\n        props.addMessage(value.textarea)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className={style.namesList}>\r\n                {props.dialogPage.dialogList.map((dialogName) => {\r\n                    return <NavLink\r\n                        to={'/dialogs/' + dialogName.id} className={style.item}\r\n                        key={dialogName.id}\r\n                        activeClassName={style.active}> {dialogName.name}\r\n                    </NavLink>\r\n                }\r\n                )}\r\n\r\n            </div>\r\n            <div className={style.messages}>\r\n\r\n                {props.dialogPage.messages.map(message => {\r\n                    return <Message {...message} />\r\n                })}\r\n                <DialogMessageForm onSubmit={onSubmit} />\r\n\r\n\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Messages","\r\nimport { addMessageActionCreator } from '../../../Redux/Redusers/DialogReducer'\r\nimport Messages from './Messages';\r\nimport { connect } from 'react-redux'\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogPage: state.dialogPage,\r\n        newMessageText: state.dialogPage.newMessageText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addMessage: (message) => { dispatch(addMessageActionCreator(message)) },\r\n\r\n    }\r\n}\r\n\r\nconst MessagesContainer = connect(mapStateToProps, mapDispatchToProps)(Messages)\r\n\r\nexport default MessagesContainer","import React from 'react';\r\nimport style from './DialogPage.module.css'\r\nimport MessagesContainer from './Messages/MessagesContaner';\r\n\r\nconst DialogPage = (props)=> {\r\n    \r\n    return (\r\n        <div className = {style.dialogpage}>      \r\n       <MessagesContainer store ={props.store}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogPage","export const updateObjectInArray =(items, itemId, objPropName, newObjProps )=>{\r\n    return  items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return { ...u, ...newObjProps }\r\n        }\r\n        return u\r\n    })\r\n\r\n}","import { usersAPI } from '../../api/api';\r\nimport {updateObjectInArray} from '../../utils/obgect-maker'\r\nconst USER_FOLLOW = 'USER-FOLLOW'\r\nconst USER_UNFOLLOW = 'USER-UN-FOLLOW'\r\nconst SET_USERS = 'SET-USERS'\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE'\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT'\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING'\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\n\r\nlet initialState = {\r\n    users: [],\r\n    totalUsersCount: 0,\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: []\r\n\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case USER_FOLLOW: {\r\n\r\n            return {\r\n                \r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true}  )\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return { ...u, followed: true }\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            }\r\n        }\r\n        case USER_UNFOLLOW: {\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false}  )\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return { ...u, followed: false }\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            }\r\n        }\r\n        case SET_USERS: {\r\n            return { ...state, users: action.users }\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return { ...state, currentPage: action.currentPage }\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return { ...state, totalUsersCount: action.totalCount }\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return { ...state, isFetching: action.isFetching }\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching ?\r\n                    [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n\r\nexport const followAC = (id) => ({ type: USER_FOLLOW, userId: id })\r\nexport const unFollowAC = (id) => ({ type: USER_UNFOLLOW, userId: id })\r\nexport const setUsersAC = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPageAC = (currentPage) => ({ type: SET_CURRENT_PAGE, currentPage: currentPage })\r\nexport const setTotalUsersCountAC = (totalCount) => ({ type: SET_TOTAL_USERS_COUNT, totalCount: totalCount })\r\nexport const toggleIsFetchingAC = (isFetching) => ({ type: TOGGLE_IS_FETCHING, isFetching: isFetching })\r\nexport const toggleIsFollowingAC = (isFetching, id) => ({ type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching: isFetching, userId: id })\r\n\r\n\r\n\r\nexport const getUsersThunkCreater = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetchingAC(true))\r\n    let data = await usersAPI.getUsers(currentPage, pageSize)\r\n    dispatch(toggleIsFetchingAC(false))\r\n    dispatch(setUsersAC(data.items))\r\n    dispatch(setTotalUsersCountAC(data.totalCount))\r\n    dispatch(setCurrentPageAC(currentPage))\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, id, method,actionCreator )=> {\r\n    dispatch(toggleIsFollowingAC(true, id));\r\n    let res = await   method(id)\r\n    if (res.data.resultCode === 0) {\r\n        dispatch(actionCreator(id))\r\n    }\r\n    dispatch(toggleIsFollowingAC(false, id))\r\n}\r\n\r\n\r\n\r\nexport const followThunkCreater = (id) => async (dispatch) => {\r\n    let method= usersAPI.follow.bind(usersAPI)\r\n    let actionCreator = followAC\r\n    followUnfollowFlow(dispatch, id, method,actionCreator )\r\n        \r\n}\r\n\r\n\r\nexport const unfollowThunkCreater = (id) => async (dispatch) => {\r\n    let method= usersAPI.unFollow.bind(usersAPI)\r\n    let actionCreator = unFollowAC\r\n    followUnfollowFlow(dispatch, id, method,actionCreator )\r\n        \r\n}\r\nexport default userReducer;\r\n\r\n","import React from 'react'\r\nimport { preloader } from '../../../asses/img/preloader.svg';\r\nimport s from './preloader.module.css'\r\n\r\nlet Preloader = () => {\r\n\r\n    return (\r\n        <div className={s.preloader}>\r\n            <img src={preloader} alt='' />\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Preloader;","export const getUsers = (state)=> {\r\n    return state.usersPage.users\r\n}\r\nexport const getPageSize = (state)=> {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state)=> {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state)=> {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state)=> {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state)=> {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\n\r\n","import React, {Suspense} from 'react'\r\n// import Users from './Users';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    setCurrentPageAC,\r\n    setTotalUsersCountAC,\r\n    toggleIsFetchingAC,\r\n    toggleIsFollowingAC,\r\n    getUsersThunkCreater,\r\n    unfollowThunkCreater,\r\n    followThunkCreater\r\n} from '../../Redux/Redusers/UsersReducer'\r\nimport Preloader from '../common/preloader/preloader';\r\nimport { getUsers, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching, getFollowingInProgress } from '../../Redux/users-selectors/users-selectors'\r\n\r\n\r\nconst Users = React.lazy(() => import('./Users'));\r\n\r\n\r\nclass UsersContaner extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunkCreater(this.props.currentPage, this.props.pageSize)\r\n    }\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.getUsersThunkCreater(pageNumber, this.props.pageSize)\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Suspense fallback={<div>Загрузка...</div>}>\r\n                <Users\r\n                    {...this.props}\r\n                    onPageChanged={this.onPageChanged} />\r\n            </Suspense>\r\n\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n\r\n\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setCurrentPage: (currentPage) => { dispatch(setCurrentPageAC(currentPage)) },\r\n        setTotalUsersCount: (totalCount) => { dispatch(setTotalUsersCountAC(totalCount)) },\r\n        toggleIsFetching: (isFetching) => { dispatch(toggleIsFetchingAC(isFetching)) },\r\n        toggleIsFollowing: (isFetching) => { dispatch(toggleIsFollowingAC(isFetching)) },\r\n        getUsersThunkCreater: (currentPage, pageSize) => { dispatch(getUsersThunkCreater(currentPage, pageSize)) },\r\n        unfollowThunkCreater: (id) => { dispatch(unfollowThunkCreater(id)) },\r\n        followThunkCreater: (id) => { dispatch(followThunkCreater(id)) }\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContaner);","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nconst ProfileStatus =(props)=>{\r\n\r\n\r\n    const [editMode,changeEditMode] = useState(false)\r\n    const [statusText,changeStatusText] = useState(props.status)\r\n\r\n    let activateEditMode =()=>{\r\n        changeEditMode(true)\r\n    }\r\n\r\n    let statusOnChange =(e)=>{\r\n        changeStatusText(e.currentTarget.value)\r\n    }\r\n    let deactivateEditMode =()=>{\r\n        changeEditMode(false);\r\n        props.updateStatus(statusText)\r\n    }\r\n\r\n\r\n \r\nreturn(\r\n<div>\r\n{!editMode&&\r\n<div>\r\n        <span onDoubleClick={activateEditMode}>My status :{props.status|| '------'}</span>\r\n    </div>}\r\n    {editMode&&<div>\r\n        <input autoFocus={true} onBlur={deactivateEditMode} onChange={statusOnChange} value={statusText}/>\r\n    </div>}\r\n    </div>\r\n)\r\n}\r\n\r\nexport default ProfileStatus;","import React from 'react';\r\nimport style from './ProfileInfo.module.css'\r\nimport Preloader from '../../common/preloader/preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\n\r\nclass ProfileInfo extends React.Component {\r\nstate = {\r\n    isMode: false\r\n}\r\n    render() {\r\n        if (!this.props.profile) {\r\n            return <Preloader />\r\n        }\r\n        return <div>\r\n            <img className={style.img} src=\"https://evo-poeziya.ru/wp-content/uploads/2017/03/TuLp.-1.jpg\" alt=\"\" />\r\n            <img src={this.props.profile.photos.large} alt=\"\" />\r\n           <ProfileStatus  status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n            {this.state.isMode&&<input type =\"text\"/>}\r\n            <p>My name is:</p><p>{this.props.profile.fullName}</p>\r\n            <p>About Me!!! </p> <span>{this.props.profile.aboutMe}</span>\r\n            {this.props.profile.lookingForAJob ? <p>I NEED A JOB</p> : <p>I HAVE A GOOD JOB</p>}\r\n        </div>\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default ProfileInfo;","import {usersAPI, profileAPI} from '../../api/api'\r\n\r\n\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET-USER-PROFILE'\r\nconst SET_STATUS = 'SET-STATUS'\r\n\r\n\r\nlet initialState = {\r\n    postData: [\r\n        { id: 1, ava: 'https://olimpik24.ru/wp-content/uploads/2017/06/b_1-300x292.png', message: 'Who are you?', like: 100 },\r\n        { id: 2, ava: 'https://olimpik24.ru/wp-content/uploads/2017/06/b_1-300x292.png', message: 'Who are you?', like: 144 },\r\n        { id: 3, ava: 'https://img1.picmix.com/output/stamp/normal/1/6/4/0/660461_8040a.png', message: 'Hello', like: 120 },\r\n        { id: 4, ava: 'https://olimpik24.ru/wp-content/uploads/2017/06/b_1-300x292.png', message: 'Who are you?', like: 111 }\r\n    ],\r\n    profile:null,\r\n    status: ''\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            {\r\n                let newPost = {\r\n                    id: 6,\r\n                    ava: 'https://olimpik24.ru/wp-content/uploads/2017/06/b_1-300x292.png',\r\n                    message: action.newPostText,\r\n                    like: 0\r\n                }\r\n\r\n                return {\r\n                    ...state,\r\n                    postData: [...state.postData, newPost],\r\n                    newPostText: ''\r\n                }\r\n                // let stateCopy = {...state}\r\n                // stateCopy.postData = [...state.postData]\r\n                // stateCopy.postData.push(newPost)\r\n                // stateCopy.newPostText = '';\r\n                // return stateCopy;\r\n            }\r\n\r\n\r\n        case SET_USER_PROFILE:\r\n            return {...state, profile: action.profile}\r\n        case SET_STATUS:\r\n            return{...state, status: action.status}\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\nexport const addPostActionCreator = (text) => ({ type: ADD_POST, newPostText:text })\r\nexport const setUserProfileAC = (profile)=>({type: SET_USER_PROFILE, profile: profile})\r\nexport const setUserStatus = (status)=>({type: SET_STATUS, status: status})\r\n\r\n\r\nexport const getStatus = (userId) => async(dispatch)=> {\r\n    let response = await profileAPI.getUserStatus(userId)\r\n    \r\n    dispatch(setUserStatus(response.data))\r\n        \r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch)=> {\r\n\r\n let response = await profileAPI.updateUserStatus(status)\r\n        if(response.data.resultCode ===0)\r\n        dispatch(setUserStatus(status))\r\n \r\n}\r\n\r\nexport const getUserProfile = (userId) => async (dispatch)=> {\r\n    let response = await  usersAPI.getProfile(userId)\r\n            dispatch(setUserProfileAC(response.data))\r\n        \r\n}\r\n\r\nexport default profileReducer;","import React from 'react'\r\nimport style from './Post.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst Post = (props)=>{\r\n    return (\r\n        <div className = {style.postBox}>\r\n        <img className = {style.img}src={props.ava} alt=\"\"/>\r\n        <p className= {style.message}>{props.message}</p>\r\n        <p className= {style.like}>like: {props.like}</p>\r\n        </div>\r\n    )\r\n}\r\nPost.propTypes = {\r\n    like: PropTypes.number,\r\n    message:PropTypes.string\r\n\r\n  };\r\n\r\nexport default Post;","\r\nimport React from 'react'\r\nimport Post from './Post/Post'\r\nimport style from './MyPost.module.css'\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Textarea } from '../../common/FormControls/FormControls';\r\nimport { required, maxLengthCreator } from '../../../utils/validators';\r\n\r\nconst maxLength20 = maxLengthCreator(20)\r\n\r\nlet ProfilePostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field className={style.input} type=\"text\" name='postText' component={Textarea} validate={[required, maxLength20]} /> <br></br>\r\n            <button className={style.button}>ADD POST</button>\r\n        </form>\r\n    )\r\n\r\n}\r\n\r\nProfilePostForm = reduxForm({ form: 'profilePost' })(ProfilePostForm)\r\n\r\n\r\nclass MyPost extends React.Component  {\r\n\r\n//     const MyPost = React.memo(props =>{\r\n//   return<></>\r\n//     }\r\n//     )\r\n\r\n    componentDidMount(){\r\n        setTimeout(()=>{\r\n            this.setState({a:1})\r\n        }, 3000)\r\n    }\r\n\r\n    onSubmit = (value) => {\r\n        console.log(value.postText)\r\n        this.props.addPosts(value.postText)\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState){\r\n        return nextProps!=this.props||nextState!=this.state\r\n    }\r\n\r\n\r\nrender(){\r\n    console.log('render')\r\n    return (\r\n       \r\n        <div className={style.myPost}>\r\n            <ProfilePostForm onSubmit={this.onSubmit} />\r\n            {this.props.postData.map(post => {\r\n                return <Post key={post.id}  {...post} />\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n    \r\n}\r\n\r\n\r\nexport default MyPost;","\r\nimport {addPostActionCreator, onPostChangeActionCreator} from '../../Redux/Redusers/ProfileReducer'\r\nimport MyPost from './MyPost/MyPost';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        addPosts:(text)=>{dispatch(addPostActionCreator(text))}\r\n    }\r\n   \r\n}\r\n\r\nlet mapStateToProps =(state)=> {\r\n        return{\r\n            postData: state.profilePage.postData,      \r\n        }\r\n}\r\n\r\nconst MyPostContainer = connect(mapStateToProps,mapDispatchToProps)(MyPost)\r\nexport default MyPostContainer;","import React from 'react'\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport style from './Profile.module.css'\r\nimport MyPostContainer from './MyPostContainer';\r\nimport Preloader from '../common/preloader/preloader';\r\n\r\n\r\nconst Profile = (props) => {\r\n   \r\n    return (\r\n       \r\n        <div className={style.profile}>\r\n            <ProfileInfo profile={props.profile} status = {props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostContainer store={props.store}/>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default Profile;","import Profile from \"./Profile\";\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from \"react-router-dom\"\r\nimport { setUserProfileAC, getUserProfile, getStatus, updateStatus } from '../../Redux/Redusers/ProfileReducer'\r\nimport{withAuthRedirect} from '../../hoc/withAuthRedirect'\r\nimport { compose } from \"redux\";\r\n\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) { \r\n            userId = this.props.authorizedUserId; \r\n            if(!userId){\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}  status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setUserProfile: (profile) => dispatch(setUserProfileAC(profile)),\r\n        getUserProfile: (userId) => dispatch(getUserProfile(userId)),\r\n        getStatus:(userId) => dispatch(getStatus(userId)),\r\n        updateStatus:(status) => dispatch(updateStatus(status))\r\n    }\r\n\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.authData.id,\r\n        isAuth: state.authData.isAuth,\r\n\r\n    }\r\n}\r\n\r\n// compose(\r\n//     connect(mapStateToProps, mapDispatchToProps),\r\n//     withRouter,\r\n//     withAuthRedirect\r\n// )(ProfileContainer)\r\n\r\n// let ProfileContainerRedirect = withAuthRedirect(ProfileContainer)\r\n\r\n// let WithUrlDataContainerToProps = withRouter(ProfileContainerRedirect)\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer)\r\n// connect(mapStateToProps, mapDispatchToProps)(WithUrlDataContainerToProps);","import React from 'react';\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { Input } from '../common/FormControls/FormControls';\r\nimport { required } from '../../utils/validators'\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../../Redux/Redusers/auth-reducer';\r\nimport {Redirect} from 'react-router-dom'\r\nimport s from '../common/FormControls/FormControls.module.css'\r\n\r\n\r\n\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            {props.error&&<div className={s.formSummuryError}>\r\n                {props.error}\r\n            </div>}\r\n            \r\n            <div>\r\n                <Field placeholder='login' name='email' component={Input} validate={[required]} />\r\n            </div>\r\n            <div>\r\n                <Field placeholder='password' type='password' name='password' component={Input} validate={[required]} />\r\n            </div>\r\n            <div>\r\n                <Field type='checkbox' name=\"rememberMe\" component='input' /> remember me\r\n                </div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}\r\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm)\r\n\r\nconst Login = (props) => {\r\n \r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n\r\n    if(props.isAuth){\r\n        return <Redirect to='/profile'/>\r\n    }\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n\r\n            <LoginReduxForm onSubmit={onSubmit} />\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return {\r\n        isAuth: state.authData.isAuth\r\n    }\r\n    \r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        login: (email, password, rememberMe)=>(dispatch(login(email, password, rememberMe)))\r\n    }\r\n    \r\n}\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Login);","import {getAuthUserData} from './auth-reducer'\r\nconst INITITIALIZED_SUCCESS = 'app-reducer/INITITIALIZED-SUCCESS'\r\n\r\nlet initialState ={\r\n    initialized: false\r\n    \r\n}\r\n\r\nconst appReducer = (state = initialState, action)=>{\r\n switch(action.type){\r\n     case INITITIALIZED_SUCCESS:\r\n         return {\r\n             ...state, \r\n             initialized:true\r\n         }\r\n         default: \r\n         return state;\r\n }\r\n}\r\n\r\n\r\nexport const initializedSuccess =()=>({type:INITITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = ()=>(dispatch)=>{\r\n   let promise = dispatch(getAuthUserData());\r\n//    dispatch(some())\r\n//    dispatch(some())\r\nPromise.all([promise]).then(()=>{\r\n    dispatch(initializedSuccess())\r\n})\r\n   \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default appReducer;","import React from 'react';\nimport './App.css';\nimport HeaderContaner from './components/Header/HeaderContaner';\nimport NavBar from './components/NavBar/NavBar';\nimport DialogPage from './components/DialogPage/DialogPage';\nimport { Route } from 'react-router-dom'\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport Login from './components/Login/Login';\nimport { connect } from 'react-redux';\nimport {initializeApp} from './Redux/Redusers/app-reducer';\nimport {compose} from 'redux';\nimport {withRouter} from 'react-router-dom'\nimport Preloader from './components/common/preloader/preloader';\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.initializeApp()\n\n}\n\n  render() {\n    if(!this.props.initialized){return <Preloader/>}\n \n    return (\n\n      <div className=\"app-wrapper\">\n        <HeaderContaner />\n        <NavBar />\n        <div className=\"app-wrapper-content\">\n          {/* <Route path='/profile/' render={() =><ProfileContaner />} /> */}\n          <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\n          <Route path='/dialogs' render={() =>\n            <DialogPage  />} />\n          <Route path='/users' render={() => <UsersContainer />} />\n          <Route path='/login' render={() => <Login />} />\n        </div>\n      </div>\n\n    );\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    initializeApp: ()=>dispatch(initializeApp()),\n  }\n} \n\nconst mapStateToProps = (state) => {\n  return {\n    initialized: state.app.initialized,\n     \n  }\n}\n\nexport default compose (\n  withRouter,\n  connect(mapStateToProps, mapDispatchToProps))(App);\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let initialState = {\r\n   person: [\r\n       { id: 1, name: 'Ivan', ava: 'https://img1.picmix.com/output/stamp/normal/6/9/4/0/660496_1d0c4.png' },\r\n       { id: 2, name: 'Ted', ava: 'http://ekladata.com/JHPCvt7p3Te7JSG53dAlYORICUw.png' },\r\n       { id: 3, name: 'Nona', ava: 'https://img1.picmix.com/output/stamp/normal/1/6/4/0/660461_8040a.png' }\r\n   ]\r\n}\r\n\r\nconst sidebarReducer =(state = initialState,  action)=>{\r\n\r\n   return state;\r\n}\r\nexport default sidebarReducer;","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport profileReducer from './Redusers/ProfileReducer';\r\nimport dialogReducer from './Redusers/DialogReducer';\r\nimport sidebarReducer from './Redusers/SidebarReducer';\r\nimport userReducer from \"./Redusers/UsersReducer\";\r\nimport authReducer from \"./Redusers/auth-reducer\";\r\nimport thunkMiddleware  from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./Redusers/app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage:profileReducer,\r\n    dialogPage:dialogReducer,\r\n    friendPage:sidebarReducer,\r\n    usersPage: userReducer,\r\n    authData:authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n\r\n})\r\n\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './Redux/redux-store'\nimport { HashRouter} from 'react-router-dom'\nimport {Provider}  from \"react-redux\"\n\nReactDOM.render(\n    <HashRouter basename={process.env.PUBLIC_URL}>\n    <Provider store = {store}>\n       <App />\n       </Provider>\n    </HashRouter>, document.getElementById('root')\n      \n    );\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__1JgeC\",\"error\":\"FormControls_error__1d43i\",\"formSummuryError\":\"FormControls_formSummuryError__1P1s4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__w5DEq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Post_img__33j2R\",\"postBox\":\"Post_postBox__sQK6g\",\"message\":\"Post_message__eGwMO\",\"like\":\"Post_like__1lcKF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"Friend_friend__2Wo2S\",\"ava\":\"Friend_ava__3ejgC\",\"name\":\"Friend_name__35QwW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPost\":\"MyPost_myPost__1hujn\",\"button\":\"MyPost_button__1FLUd\",\"input\":\"MyPost_input__3Eeoy\"};"],"sourceRoot":""}